import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as n,b as s}from"./app-NwmlIrjp.js";const i={},l=s(`<h2 id="_1-单机部署" tabindex="-1"><a class="header-anchor" href="#_1-单机部署"><span>1.单机部署</span></a></h2><p>我们在Centos7虚拟机中使用Docker来安装。</p><h3 id="_1-1-下载镜像" tabindex="-1"><a class="header-anchor" href="#_1-1-下载镜像"><span>1.1.下载镜像</span></a></h3><p>方式一：在线拉取</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull rabbitmq:3-management
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>方式二：从本地加载<br> 上传到虚拟机中后，使用命令加载镜像即可：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> load <span class="token parameter variable">-i</span> mq.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-2-安装mq" tabindex="-1"><a class="header-anchor" href="#_1-2-安装mq"><span>1.2.安装MQ</span></a></h3><p>执行下面的命令来运行MQ容器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token punctuation">\\</span>
 <span class="token parameter variable">-e</span> <span class="token assign-left variable">RABBITMQ_DEFAULT_USER</span><span class="token operator">=</span>root <span class="token punctuation">\\</span>
 <span class="token parameter variable">-e</span> <span class="token assign-left variable">RABBITMQ_DEFAULT_PASS</span><span class="token operator">=</span>root <span class="token punctuation">\\</span>
 <span class="token parameter variable">--name</span> mq <span class="token punctuation">\\</span>
 <span class="token parameter variable">--hostname</span> mq1 <span class="token punctuation">\\</span>
 <span class="token parameter variable">-p</span> <span class="token number">15672</span>:15672 <span class="token punctuation">\\</span>
 <span class="token parameter variable">-p</span> <span class="token number">5672</span>:5672 <span class="token punctuation">\\</span>
 <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
 rabbitmq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-集群部署" tabindex="-1"><a class="header-anchor" href="#_2-集群部署"><span>2.集群部署</span></a></h2><p>接下来，我们看看如何安装RabbitMQ的集群。</p><h3 id="_2-1-集群分类" tabindex="-1"><a class="header-anchor" href="#_2-1-集群分类"><span>2.1.集群分类</span></a></h3><p>在RabbitMQ的官方文档中，讲述了两种集群的配置方式：</p><ul><li>普通模式：普通模式集群不进行数据同步，每个MQ都有自己的队列、数据信息（其它元数据信息如交换机等会同步）。例如我们有2个MQ：mq1，和mq2，如果你的消息在mq1，而你连接到了mq2，那么mq2会去mq1拉取消息，然后返回给你。如果mq1宕机，消息就会丢失。</li><li>镜像模式：与普通模式不同，队列会在各个mq的镜像节点之间同步，因此你连接到任何一个镜像节点，均可获取到消息。而且如果一个节点宕机，并不会导致数据丢失。不过，这种方式增加了数据同步的带宽消耗。</li></ul><p>我们先来看普通模式集群。</p><h3 id="_2-2-设置网络" tabindex="-1"><a class="header-anchor" href="#_2-2-设置网络"><span>2.2.设置网络</span></a></h3><p>首先，我们需要让3台MQ互相知道对方的存在。<br> 分别在3台机器中，设置 /etc/hosts文件，添加如下内容：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>192.168.150.101 mq1
192.168.150.102 mq2
192.168.150.103 mq3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并在每台机器上测试，是否可以ping通对方：</p>`,20),t=[l];function r(p,c){return n(),e("div",null,t)}const m=a(i,[["render",r],["__file","install.html.vue"]]),u=JSON.parse('{"path":"/frame/mq/RabbitMQ/install.html","title":"环境安装","lang":"zh-CN","frontmatter":{"title":"环境安装","shortTitle":"环境安装","description":null,"date":"2024-06-16T22:07:54.000Z","categories":["消息队列"],"tags":["RabbitMQ"]},"headers":[{"level":2,"title":"1.单机部署","slug":"_1-单机部署","link":"#_1-单机部署","children":[{"level":3,"title":"1.1.下载镜像","slug":"_1-1-下载镜像","link":"#_1-1-下载镜像","children":[]},{"level":3,"title":"1.2.安装MQ","slug":"_1-2-安装mq","link":"#_1-2-安装mq","children":[]}]},{"level":2,"title":"2.集群部署","slug":"_2-集群部署","link":"#_2-集群部署","children":[{"level":3,"title":"2.1.集群分类","slug":"_2-1-集群分类","link":"#_2-1-集群分类","children":[]},{"level":3,"title":"2.2.设置网络","slug":"_2-2-设置网络","link":"#_2-2-设置网络","children":[]}]}],"git":{"createdTime":1718621104000,"updatedTime":1718621104000,"contributors":[{"name":"Zhiyun Qin","email":"96156298+Okita1027@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.46,"words":437},"filePathRelative":"frame/mq/RabbitMQ/install.md","localizedDate":"2024年6月17日"}');export{m as comp,u as data};
