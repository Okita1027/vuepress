import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as a,b as e}from"./app-NwmlIrjp.js";const t={},i=e(`<h1 id="安装docker" tabindex="-1"><a class="header-anchor" href="#安装docker"><span>安装Docker</span></a></h1><p>Docker 分为 CE 和 EE 两大版本。CE 即社区版（免费，支持周期 7 个月），EE 即企业版，强调安全，付费使用，支持周期 24 个月。<br> Docker CE 分为 <code>stable</code> <code>test</code> 和 <code>nightly</code> 三个更新频道。<br> 官方网站上有各种环境下的 <a href="https://docs.docker.com/install/" target="_blank" rel="noopener noreferrer">安装指南</a>，这里主要介绍 Docker CE 在 CentOS上的安装。</p><h1 id="centos安装docker" tabindex="-1"><a class="header-anchor" href="#centos安装docker"><span>CentOS安装Docker</span></a></h1><p>Docker CE 支持 64 位版本 CentOS 7，并且要求内核版本不低于 3.10， CentOS 7 满足最低内核的要求，所以我们在CentOS 7安装Docker。</p><h2 id="卸载-可选" tabindex="-1"><a class="header-anchor" href="#卸载-可选"><span>卸载（可选）</span></a></h2><p>如果之前安装过旧版本的Docker，可以使用下面命令卸载：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
                  docker-client <span class="token punctuation">\\</span>
                  docker-client-latest <span class="token punctuation">\\</span>
                  docker-common <span class="token punctuation">\\</span>
                  docker-latest <span class="token punctuation">\\</span>
                  docker-latest-logrotate <span class="token punctuation">\\</span>
                  docker-logrotate <span class="token punctuation">\\</span>
                  docker-selinux <span class="token punctuation">\\</span>
                  docker-engine-selinux <span class="token punctuation">\\</span>
                  docker-engine <span class="token punctuation">\\</span>
                  docker-ce
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装docker-1" tabindex="-1"><a class="header-anchor" href="#安装docker-1"><span>安装docker</span></a></h2><p>首先虚拟机联网，安装yum工具</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils <span class="token punctuation">\\</span>
           device-mapper-persistent-data <span class="token punctuation">\\</span>
           lvm2 --skip-broken
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后更新本地镜像源：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 设置docker镜像源</span>
yum-config-manager <span class="token punctuation">\\</span>
    --add-repo <span class="token punctuation">\\</span>
    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
    
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/download.docker.com/mirrors.aliyun.com\\/docker-ce/g&#39;</span> /etc/yum.repos.d/docker-ce.repo

yum makecache fast
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后输入命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>docker-ce为社区免费版本。稍等片刻，docker即可安装成功。</p><h2 id="启动docker" tabindex="-1"><a class="header-anchor" href="#启动docker"><span>启动docker</span></a></h2><p>Docker应用需要用到各种端口，逐一去修改防火墙设置。非常麻烦，因此建议大家直接关闭防火墙！<br> 启动docker前，一定要关闭防火墙!</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 关闭</span>
systemctl stop firewalld
<span class="token comment"># 禁止开机启动防火墙</span>
systemctl disable firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过命令启动docker：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl start <span class="token function">docker</span>  <span class="token comment"># 启动docker服务</span>

systemctl stop <span class="token function">docker</span>  <span class="token comment"># 停止docker服务</span>

systemctl restart <span class="token function">docker</span>  <span class="token comment"># 重启docker服务</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后输入命令，可以查看docker版本：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>docker -v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置镜像加速" tabindex="-1"><a class="header-anchor" href="#配置镜像加速"><span>配置镜像加速</span></a></h2><p>docker官方镜像仓库网速较差，我们需要设置国内镜像服务：<br> 参考阿里云的镜像加速文档：<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors" target="_blank" rel="noopener noreferrer">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p><h1 id="centos7安装dockercompose" tabindex="-1"><a class="header-anchor" href="#centos7安装dockercompose"><span>CentOS7安装DockerCompose</span></a></h1><h2 id="下载" tabindex="-1"><a class="header-anchor" href="#下载"><span>下载</span></a></h2><p>Linux下需要通过命令下载：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 安装</span>
<span class="token function">curl</span> <span class="token parameter variable">-L</span> https://github.com/docker/compose/releases/download/1.23.1/docker-compose-<span class="token variable"><span class="token variable">\`</span><span class="token function">uname</span> <span class="token parameter variable">-s</span><span class="token variable">\`</span></span>-<span class="token variable"><span class="token variable">\`</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">\`</span></span> <span class="token operator">&gt;</span> /usr/local/bin/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改文件权限" tabindex="-1"><a class="header-anchor" href="#修改文件权限"><span>修改文件权限</span></a></h2><p>修改文件权限：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 修改权限</span>
<span class="token function">chmod</span> +x /usr/local/bin/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="base自动补全命令" tabindex="-1"><a class="header-anchor" href="#base自动补全命令"><span>Base自动补全命令：</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 补全命令</span>
<span class="token function">curl</span> <span class="token parameter variable">-L</span> https://raw.githubusercontent.com/docker/compose/1.29.1/contrib/completion/bash/docker-compose <span class="token operator">&gt;</span> /etc/bash_completion.d/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果这里出现错误，需要修改自己的hosts文件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;199.232.68.133 raw.githubusercontent.com&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/hosts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="docker镜像仓库" tabindex="-1"><a class="header-anchor" href="#docker镜像仓库"><span>Docker镜像仓库</span></a></h1><p>搭建镜像仓库可以基于Docker官方提供的DockerRegistry来实现。<br> 官网地址：<a href="https://hub.docker.com/_/registry" target="_blank" rel="noopener noreferrer">https://hub.docker.com/_/registry</a></p><h2 id="简化版镜像仓库" tabindex="-1"><a class="header-anchor" href="#简化版镜像仓库"><span>简化版镜像仓库</span></a></h2><p>Docker官方的Docker Registry是一个基础版本的Docker镜像仓库，具备仓库管理的完整功能，但是没有图形化界面。<br> 搭建方式比较简单，命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
    <span class="token parameter variable">--name</span> registry	<span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">5000</span>:5000 <span class="token punctuation">\\</span>
    <span class="token parameter variable">-v</span> registry-data:/var/lib/registry <span class="token punctuation">\\</span>
    registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>命令中挂载了一个数据卷registry-data到容器内的/var/lib/registry 目录，这是私有镜像库存放数据的目录。<br> 访问http://YourIp:5000/v2/_catalog 可以查看当前私有镜像服务中包含的镜像</p><h2 id="带有图形化界面版本" tabindex="-1"><a class="header-anchor" href="#带有图形化界面版本"><span>带有图形化界面版本</span></a></h2><p>使用DockerCompose部署带有图象界面的DockerRegistry，命令如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.0&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">registry</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> registry
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> ./registry<span class="token punctuation">-</span>data<span class="token punctuation">:</span>/var/lib/registry
  <span class="token key atrule">ui</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> joxit/docker<span class="token punctuation">-</span>registry<span class="token punctuation">-</span>ui<span class="token punctuation">:</span>static
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">80</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> REGISTRY_TITLE=传智教育私有仓库
      <span class="token punctuation">-</span> REGISTRY_URL=http<span class="token punctuation">:</span>//registry<span class="token punctuation">:</span><span class="token number">5000</span>
    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> registry
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置docker信任地址" tabindex="-1"><a class="header-anchor" href="#配置docker信任地址"><span>配置Docker信任地址</span></a></h2><p>我们的私服采用的是http协议，默认不被Docker信任，所以需要做一个配置：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 打开要修改的文件</span>
<span class="token function">vi</span> /etc/docker/daemon.json
<span class="token comment"># 添加内容：</span>
<span class="token string">&quot;insecure-registries&quot;</span>:<span class="token punctuation">[</span><span class="token string">&quot;http://192.168.150.101:8080&quot;</span><span class="token punctuation">]</span>
<span class="token comment"># 重加载</span>
systemctl daemon-reload
<span class="token comment"># 重启docker</span>
systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47),c=[i];function l(r,o){return a(),n("div",null,c)}const u=s(t,[["render",l],["__file","install.html.vue"]]),m=JSON.parse('{"path":"/frame/docker/install.html","title":"环境安装","lang":"zh-CN","frontmatter":{"title":"环境安装","shortTitle":"环境安装","description":null,"date":"2024-06-16T22:11:18.000Z","categories":["Docker"],"tags":[]},"headers":[{"level":2,"title":"卸载（可选）","slug":"卸载-可选","link":"#卸载-可选","children":[]},{"level":2,"title":"安装docker","slug":"安装docker-1","link":"#安装docker-1","children":[]},{"level":2,"title":"启动docker","slug":"启动docker","link":"#启动docker","children":[]},{"level":2,"title":"配置镜像加速","slug":"配置镜像加速","link":"#配置镜像加速","children":[]},{"level":2,"title":"下载","slug":"下载","link":"#下载","children":[]},{"level":2,"title":"修改文件权限","slug":"修改文件权限","link":"#修改文件权限","children":[]},{"level":2,"title":"Base自动补全命令：","slug":"base自动补全命令","link":"#base自动补全命令","children":[]},{"level":2,"title":"简化版镜像仓库","slug":"简化版镜像仓库","link":"#简化版镜像仓库","children":[]},{"level":2,"title":"带有图形化界面版本","slug":"带有图形化界面版本","link":"#带有图形化界面版本","children":[]},{"level":2,"title":"配置Docker信任地址","slug":"配置docker信任地址","link":"#配置docker信任地址","children":[]}],"git":{"createdTime":1718621104000,"updatedTime":1718621104000,"contributors":[{"name":"Zhiyun Qin","email":"96156298+Okita1027@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.87,"words":861},"filePathRelative":"frame/docker/install.md","localizedDate":"2024年6月17日"}');export{u as comp,m as data};
